// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/files": {
            "post": {
                "description": "Upload a video file with size limit of 50MB",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "video"
                ],
                "summary": "Upload a video file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Video file to upload (max 50MB)",
                        "name": "video",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the file link",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid file size or type",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/api/predict": {
            "post": {
                "description": "Upload a video URL and get predicted actions in Uzbek language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prediction"
                ],
                "summary": "Predict actions from video",
                "parameters": [
                    {
                        "description": "Request body with video URL",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.predictActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns predicted actions in Uzbek",
                        "schema": {
                            "$ref": "#/definitions/handler.pretictActionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error or prediction service error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.predictActionRequest": {
            "description": "Request containing the URL of the video to analyze",
            "type": "object",
            "required": [
                "video_url"
            ],
            "properties": {
                "video_url": {
                    "description": "@Description URL of the video to analyze",
                    "type": "string"
                }
            }
        },
        "handler.pretictActionResponse": {
            "description": "Response containing predicted actions in Uzbek language",
            "type": "object",
            "properties": {
                "predictions": {
                    "description": "@Description List of predicted actions in Uzbek language",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.BaseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:4040",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "ActionDetector API",
	Description:      "API Server for Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
